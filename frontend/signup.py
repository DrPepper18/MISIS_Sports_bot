from aiogram import types
from aiogram import Router
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.enums import ParseMode
from .text import *
from backend.cors import *
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, \
    InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime, timedelta

router = Router()

# –ú–∞—à–∏–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
class ChooseSchedule(StatesGroup):
    day = State()
    pair = State()
    gym = State()
    sign_up_finished = State()

def days_keyboard():
    """
    –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É. –§–æ—Ä–º–∞—Ç: "–¥–µ–Ω—å_–Ω–µ–¥–µ–ª–∏ –¥–µ–Ω—å.–º–µ—Å—è—Ü"
    –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–∏
    –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏ —Å —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ

    !!! –ü–æ–∫–∞ —è–∑—ã–∫ —Ä—É—Å—Å–∫–∏–π —Ç–æ–ª—å–∫–æ –æ—Å—Ç–∞–≤–∏–ª, —á—É—Ç—å –ø–æ–∑–∂–µ –∏–∑–º–µ–Ω—é
    + –í—ã–≤–æ–¥—è—Ç—Å—è –¥–Ω–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ—á–∫—É, –∫–æ–≥–¥–∞ –¥–æ–ø–∏—à–µ–º, –≥–ª—è–Ω—É, —Å—Ç—Ä–µ–º–Ω–æ –∏–ª–∏ –Ω–æ—Ä–º
    """
    today = datetime.now()
    current_day = today.weekday()

    if current_day >= 5:
        start_next_week = today + timedelta(days=(7 - current_day))
        start_day = start_next_week.weekday()
    else:
        start_day = current_day

    buttons = []
    for i in range(start_day, start_day + 5):
        day_name = DAYS[0][i % 7]
        formatted_date = (today + timedelta(days=(i - current_day))).strftime("%d.%m")
        buttons.append([InlineKeyboardButton(text=f"{day_name} {formatted_date}",  callback_data=day_name)])

    return InlineKeyboardMarkup(inline_keyboard=buttons)

def pairs_keyboard():
    """
    –ï–≥–æ—Ä, —Å–¥–µ–ª–∞–π –ø—Ä–æ–≤–µ—Ä–∫—É, —á—Ç–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Ç–µ–∫—É—â–∞—è –ø–∞—Ä–∞ –∏ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è
    –∏ –µ—Å–ª–∏ —É–∂–µ –≤—Å–µ –ø–∞—Ä—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å
    """

def gyms_keyboard():
    """
    –î–∏–º–∞ –∏ –ë–æ–≥–¥–∞–Ω, –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ç–æ, —á—Ç–æ –Ω–∞ –ø–∞—Ä—É –∑–∞–ø–∏—Å–∞–Ω–æ <=30 —á–µ–ª–æ–≤–µ–∫
    –ù–æ, –Ω–∞–≤–µ—Ä–Ω–æ–µ, –∫ –ø–µ—Ä–≤–æ–º—É —Å–ø—Ä–∏–Ω—Ç—É —ç—Ç–æ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ

    –ï—â–µ —Ç–µ–∫—Å—Ç –Ω–∞–¥–æ –±—ã –ø–æ–¥—Ä–µ–¥–∞—á–∏—Ç—å, —ç–º–æ–¥–∑–∏ –¥–æ–±–∞–≤–∏—Ç—å, —á—Ç–æ–± —Å–∏–º–ø–∞—Ç–∏—á–Ω–µ–Ω—å–∫–æ –±—ã–ª–∞, –∞–ª—è
    –ó–∞–ª –±–æ–∫—Å–∞ ü•ä
    """

# –í—ã–±–æ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏
@router.message(ChooseSchedule.day)
async def signup_start(message: types.Message, state: FSMContext) -> None:
    data = await state.get_data()
    await message.answer(CHOOSE_THE_DAY[data['is_english']], reply_markup=days_keyboard())
    await state.set_state(ChooseSchedule.pair)

# –í—ã–±–æ—Ä –∑–∞–ª–∞
@router.message(ChooseSchedule.pair)
async def day_chosen(message: types.Message, state: FSMContext) -> None:
    await state.update_data(day=message.text)
    data = await state.get_data()
    await message.answer(CHOOSE_THE_PAIR[data['is_english']], reply_markup=pair_keyboard())
    await state.set_state(ChooseSchedule.gym)


# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
@router.message(ChooseSchedule.gym)
async def pair_chosen(message: types.Message, state: FSMContext) -> None:
    await state.update_data(day=message.pair)
    data = await state.get_data()
    await message.answer(CHOOSE_THE_GYM[data['is_english']], reply_markup=gym_keyboard())
    await state.set_state(ChooseSchedule.sign_up_finished)

# –ï–≥–æ—Ä, –∑–∞–≤–µ—Ä—à–∏ –∑–∞–ø–∏—Å—å
#